@import './variables.module.css';

:root {
    --controls-column-width: 80px; /* default, overwritten dynamically */
	--drum-grid-row-height: 80px; /* default, overwritten dynamically */
}

.responsiveCell {
    width: calc(var(--drum-grid-row-height) * 0.9);
    height: 100%; /* ðŸ”¥ match row */
    flex-shrink: 0;
    box-sizing: border-box;
}

.drumGridOuter {
    background: #000;
    padding: 16px;
	border-radius: 10px;
}

.scrollContainer {
    overflow-x: auto;
    overflow-y: hidden;
    white-space: nowrap;
    width: 100%;
    scrollbar-width: thick; /* Firefox */
    scrollbar-color: #ad10a0 #000; /* Firefox: thumb color and track */
    flex-grow: 1;
    height: 100%;
}

/* WebKit (Chrome, Safari) scrollbar */
.scrollContainer::-webkit-scrollbar {
    height: 8px;
}

.scrollContainer::-webkit-scrollbar-thumb {
    background: #a60f99; /* Neon green thumb */
    border-radius: 4px;
}

.scrollContainer::-webkit-scrollbar-track {
    background: #000; /* Black track (can change as needed) */
}

.innerGridContainer {
    white-space: nowrap;
}

.ghostRow {
    display: flex;
    align-items: center;
    height: var(--drum-grid-row-height); /* ðŸ”¥ match row height */
    margin-bottom: 6px; /* optional gap */
}

.ghostRow .labelSpacer {
    width: 100%;
}

.ghostRowWrapper {
    position: relative;
    z-index: 2;
}

.ghostCell {
    width: calc(var(--drum-grid-row-height) * 0.9);
    height: calc(var(--drum-grid-row-height) * 0.25); /* shorter for ghost row */
    border-radius: 2px;
    background: #222;
    transition: background 0.1s;
    flex-shrink: 0;
    box-sizing: border-box;
}

.ghostSpacer {
    width: var(--controls-width);
    height: 100%;
    flex-shrink: 0;
}

.active {
    background: #676767;
}

.drumGrid {
    display: flex;
    flex-direction: column;
    gap: 6px;
    white-space: nowrap;
}

.gridRow {
    display: flex;
    height: var(--drum-grid-row-height);
    align-items: stretch;
}

.label {
    width: 50px;
    text-align: right;
    margin-right: 8px;
    margin-top: 2px;
    flex-shrink: 0;
}

.cell {
    width: calc(var(--drum-grid-row-height) * 0.9);
    height: 100%; 
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
}

.cell input[type='checkbox'] {
    appearance: none;
    width: 100%;
    height: 100%;
    background: #111;
    border: 1px solid #333;
    border-radius: 4px;
    cursor: pointer;
}

.cell input[type='checkbox']:checked {
    /* background: rgb(255, 140, 0); */
	background: var(--color-off-orange-1);
	border: 3px solid rgb(145, 72, 12);
}

.cell input[type='checkbox']:hover {
	background: rgb(50, 42, 35);
	border: 3px solid rgb(71, 44, 22);
}

.playing {
    outline: 2px solid rgb(255, 0, 242);
}

/* Remove previous alternating backgrounds from cells */
.cell.evenBeat,
.cell.oddBeat {
    background-color: transparent !important;
}

/* New container for the grid */
.gridContainer {
    position: relative;
    display: flex;
    flex-direction: column;
}
/* Beat background container positioned behind grid rows */
.beatBackground {
    top: var(--drum-grid-row-height); 
    position: absolute;
    top: 0;
    left: var(--controls-column-width * 1); 
    height: 100%;
    width: 100%;
    pointer-events: none;
    z-index: 0;
    display: flex;
}

/* Each vertical stripe for a beat */
.beatStripe {
    height: 100%;
    flex-shrink: 0;
    transition: background-color 0.3s;
}

/* Use subtle hue shifts for even/odd beats */
.evenBeatHue {
    background-color: hsla(270, 76%, 31%, 0.895);
}

.oddBeatHue {
    background-color: hsla(320, 67%, 36%, 0.861);
}

/* Make sure drum grid rows and cells are above */
.drumGrid {
    position: relative;
    z-index: 3;
}

/* Keep playing outline above backgrounds */
.playing {
    outline: 2px solid rgb(255, 0, 242);
    position: relative; /* make sure outline shows */
    z-index: 2;
}

.controlsBox {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: var(--color-dark-purple-1);
    border-radius: 5px;
    height: var(--drum-grid-row-height); 
    box-sizing: border-box;
}

.controlsBox select {
    font-size: 12px;
    margin-bottom: 6px;
    width: 100%;
    text-overflow: ellipsis;
	background-color: var(--color-dark-gray-1);
    display: flex;
    flex-direction: column;
    align-items: center;
	color: var(--color-off-white-1);
}

.controlsBox input[type='range'] {
    width: 100%;
}

.sampleComboBox {
    background-color: rgb(61, 27, 78);
    border-radius: 5px;
    font-size: calc(var(--drum-grid-row-height) * 0.4); /* scale with row height */
    max-height: 60%;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
	font-weight: 900;
}

.volumeSlider {
    accent-color: rgb(110, 19, 96);
    width: 100%;
    height: 30%; /* or whatever fits nicely */
}

.controlsColumn {
    display: flex;
    flex-direction: column;
    gap: 6px;
    padding-right: 8px;
    flex-shrink: 0;
    width: var(--controls-column-width);
}

.controlsBoxSpacer {
	color: var(--color-off-white-1);
    height: calc(var(--drum-grid-row-height) - 10px);
    flex-shrink: 0;
	background-color: var(--color-dark-gray-1);;
	border: 5px solid rgb(36, 27, 42);
	border-bottom: 5px solid rgb(98, 37, 110);
 	display: flex;
    align-items: center; 
    justify-content: center;
	font-size: larger;
	font-weight: 900;
}

.gridArea {
    position: relative;
    width: fit-content;
}

.fixedGridContainer {
    display: flex;
    align-items: flex-start;
}

