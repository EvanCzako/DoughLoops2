.drumGridOuter {
  background: #000;
  padding: 16px;
  color: white;
  /* Remove overflow-x here; handled in scrollContainer */
}

.scrollContainer {
  overflow-x: auto;
  white-space: nowrap;
  /* Make sure scroll container takes full width */
  width: 100%;
}

.innerGridContainer {
  /* This container grows horizontally with grid width */
  /* Prevent line wrap */
  white-space: nowrap;
}

.ghostRow {
  display: flex;
  align-items: center;
  margin-bottom: 8px;
  /* Make sure no wrapping */
  white-space: nowrap;
}

.ghostCell {
  width: 24px;
  height: 6px;
  margin: 0 2px;
  border-radius: 2px;
  background: #222;
  transition: background 0.2s;
  flex-shrink: 0; /* prevent shrinking */
  box-sizing: border-box;
}

.active {
  background: #444;
}

.drumGrid {
  display: flex;
  flex-direction: column;
  gap: 6px;
  white-space: nowrap;
}

.gridRow {
  display: flex;
  align-items: center;
  white-space: nowrap;
}

.label {
  width: 50px;
  text-align: right;
  margin-right: 8px;
  margin-top: 2px;
  flex-shrink: 0;
}

.cell {
  width: 24px;
  height: 24px;
  margin: 2px 2px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  box-sizing: border-box;
}

.cell input[type='checkbox'] {
  appearance: none;
  width: 100%;
  height: 100%;
  background: #111;
  border: 1px solid #333;
  border-radius: 2px;
  cursor: pointer;
}

.cell input[type='checkbox']:checked {
  background: rgb(255, 140, 0);
}

.playing {
  outline: 2px solid rgb(255, 0, 242);
}

/* Remove previous alternating backgrounds from cells */
.cell.evenBeat,
.cell.oddBeat {
  background-color: transparent !important;
}

/* New container for the grid */
.gridContainer {
  position: relative;
  /* force height to contain all rows */
  height: calc(28px * 4 + 6px * 3); /* cell height * rows + gap * (rows-1) */
}

/* Beat background container positioned behind grid rows */
.beatBackground {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%; /* cover full width of container */
  pointer-events: none;
  z-index: 0;
  display: flex;
  margin-left: 58px;
}

/* Each vertical stripe for a beat */
.beatStripe {
  height: 100%;
  flex-shrink: 0;
  /* width will be set inline via style prop in React */
  transition: background-color 0.3s;
}

/* Use subtle hue shifts for even/odd beats */
.evenBeatHue {
  background-color: hsla(270, 80%, 30%, 0.746);
}

.oddBeatHue {
  background-color: hsla(320, 70%, 35%, 0.657);
}

/* Make sure drum grid rows and cells are above */
.drumGrid {
  position: relative;
  z-index: 1;
}

/* Keep playing outline above backgrounds */
.playing {
  outline: 2px solid rgb(255, 0, 242);
  position: relative; /* make sure outline shows */
  z-index: 2;
}
